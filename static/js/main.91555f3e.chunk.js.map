{"version":3,"sources":["static/cook_avatar.png","static/no_results.jpg","components/Navbar.js","components/Search.js","components/ListElement.js","components/List.js","components/Placeholder.js","components/MainPage.js","components/Recipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleSubmit","bind","assertThisInitialized","onChange","e","preventDefault","triggerSearch","setState","target","style","paddingTop","onSubmit","TextField_default","marginRight","placeholder","autoFocus","required","Button_default","type","Component","ListElement","ListItem_default","ListItemAvatar_default","Avatar_default","alt","src","item","thumbnail","require","ListItemText_default","primary","Link","to","concat","title","textDecoration","secondary","ingredients","List","listData","map","index","components_ListElement","key","Placeholder","display","alignItems","justifyContent","width","height","MainPage","Fragment","components_Search","length","expectResults","components_List","components_Placeholder","Recipe","index_min_default","url","data","filter","match","params","href","App","_this2","axios","get","then","res","results","sort","b","_this3","BrowserRouter","components_Navbar","Switch","Route","exact","path","render","routeProps","components_MainPage","assign","components_Recipe","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91555f3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cook_avatar.aab37981.png\";","module.exports = __webpack_public_path__ + \"static/media/no_results.fddf24c1.jpg\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"title\" color=\"inherit\">\r\n              Recipe Puppy App\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      value:''\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    this.props.triggerSearch(this.state.value);\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({value:e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: 15 }}>\r\n      <form onSubmit={this.handleSubmit}>\r\n      <TextField\r\n        style={{marginRight: '15px'}}\r\n        placeholder=\"Search ingredient\"\r\n        value={this.state.value}\r\n        onChange={this.onChange}\r\n        autoFocus={true}\r\n        required\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\">\r\n      Search\r\n      </Button>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListElement = (props) => (\r\n   <ListItem>\r\n     <ListItemAvatar>\r\n       <Avatar alt=\"Avatar\" src={props.item.thumbnail?props.item.thumbnail:require(\"../static/cook_avatar.png\")} />\r\n     </ListItemAvatar>\r\n       <ListItemText\r\n         primary={\r\n           <Link\r\n             to={`/recipe/${props.item.title}`}\r\n             style={{ textDecoration: 'none' }}>\r\n               <Typography color=\"textPrimary\">\r\n                {props.item.title}\r\n               </Typography>\r\n           </Link>}\r\n         secondary={props.item.ingredients}\r\n       />\r\n   </ListItem>\r\n);\r\n\r\nexport default ListElement;\r\n","import React from 'react';\r\nimport ListElement from './ListElement';\r\n\r\nconst List = (props) => (\r\n  <ul>\r\n    {props.listData.map((item,index)=>{\r\n      return <ListElement key={index} item={item} />\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nconst Placeholder = () => (\r\n  <div\r\n    style={{display: 'flex', alignItems: 'center', justifyContent:'center'}}\r\n  >\r\n    <img\r\n      alt=\"No results!\"\r\n      src={require(\"../static/no_results.jpg\")}\r\n      style={{width: '300px', height: '300px'}}\r\n       />\r\n  </div>\r\n);\r\n\r\nexport default Placeholder;\r\n","import React from 'react';\r\nimport Search from './Search';\r\nimport List from './List';\r\nimport Placeholder from './Placeholder';\r\n\r\nconst MainPage = (props) => (\r\n  <React.Fragment>\r\n    <Search triggerSearch={props.triggerSearch} />\r\n    {(props.listData.length || !props.expectResults)? <List listData={props.listData} /> : <Placeholder/>}\r\n  </React.Fragment>\r\n);\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport Iframe from 'react-iframe';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Recipe = (props) => (\r\n    <div style={{ paddingTop: 15 }}>\r\n    <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\">\r\n        Go back\r\n      </Button>\r\n    </Link>\r\n    <Iframe url={props.data.filter((item)=>(item.title==props.match.params.title)).length?\r\n                 props.data.filter((item)=>(item.title==props.match.params.title))[0].href:\"\"}\r\n        width=\"100%\"\r\n        height=\"75vh\"\r\n        position=\"relative\"\r\n    />\r\n    </div>\r\n);\r\n\r\nexport default Recipe;\r\n","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport MainPage from './components/MainPage';\r\nimport Recipe from './components/Recipe';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        data:[],\r\n        expectResults: false\r\n    }\r\n    this.triggerSearch = this.triggerSearch.bind(this);\r\n  }\r\n\r\n  triggerSearch(value){\r\n    axios.get(`https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?q=${value}&p=1`)\r\n    .then(res => {\r\n      this.setState({\r\n          data: res.data.results.sort((a,b)=>(b.title < a.title)),\r\n          expectResults:true\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <React.Fragment>\r\n        <Navbar />\r\n        <Switch>\r\n        <Route exact path=\"/\"\r\n          render={(routeProps)=>(\r\n            <MainPage {...routeProps}\r\n             triggerSearch={this.triggerSearch}\r\n             listData={this.state.data}\r\n             expectResults={this.state.expectResults}\r\n            />)}\r\n        />\r\n        <Route exact path=\"/recipe/:title\"\r\n        render={(routeProps)=>(\r\n          <Recipe {...routeProps}\r\n          data={this.state.data}\r\n         />)}\r\n         />\r\n        </Switch>\r\n      </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}